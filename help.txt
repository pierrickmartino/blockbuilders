# SERVER command
docker-compose -f docker-compose.server.yml down -v --remove-orphans
docker volume prune -a
docker image prune -a
docker-compose -f docker-compose.server.yml build --no-cache
docker-compose -f docker-compose.server.yml run --rm backend python manage.py createsuperuser
docker-compose -f docker-compose.server.yml run --rm backend python manage.py loaddata blockchains.json
docker-compose -f docker-compose.server.yml run --rm backend python manage.py loaddata fiats.json
docker-compose -f docker-compose.server.yml up --build --remove-orphans --detach
docker network inspect blockbuilders_internal
docker-compose -f docker-compose.server.yml ps

# Update Procedure in Dev - with backend update
# modification du .env pour prendre localhost en DB_HOSTNAME
python backend/manage.py makemigrations
python backend/manage.py migrate
python backend/manage.py collectstatic
# modification du .env pour prendre db en DB_HOSTNAME
docker-compose -f docker-compose.stack.yml up --build --remove-orphans -d

# Update Procedure in Prod
docker-compose -f docker-compose.server.yml build --no-cache
docker-compose -f docker-compose.server.yml up --remove-orphans --detach

# Reset Procedure with STACK
# modification du .env pour prendre localhost en DB_HOSTNAME
python backend/manage.py makemigrations
python backend/manage.py migrate
python backend/manage.py collectstatic
# modification du .env pour prendre db en DB_HOSTNAME
docker-compose -f docker-compose.stack.yml down -v --remove-orphans
docker volume prune -a
docker image prune -a
docker-compose -f docker-compose.stack.yml up --build --remove-orphans -d
docker-compose -f docker-compose.stack.yml run --rm backend python manage.py createsuperuser
docker-compose -f docker-compose.stack.yml run --rm backend python manage.py loaddata blockchains.json
docker-compose -f docker-compose.stack.yml run --rm backend python manage.py loaddata fiats.json
# creation du token pour le user
# mise Ã  jour des 2 fichiers .env avec le nouveau token
# STOP
docker-compose -f docker-compose.stack.yml up --build --remove-orphans -d

#HowTo cleanUp Node/React/Nextjs install
cd .\frontend\
nvm install lts
nvm use lts
nvm current
npm install -g npm@10.9.0
npm cache clean --force
rm -r node_modules
rm -r package-lock.json
npm install
npm update

#HowTo find frontend component to update
npm outdated

#HowTo cleanUp Ubuntu
journalctl --disk-usage
sudo journalctl --vacuum-time=3d
du -sh /var/cache/apt/archives
sudo apt-get remove --purge -y software-properties-common
sudo apt-get clean
rm -rf /home/*/.local/share/Trash/*/**
rm -rf /root/.local/share/Trash/*/**
docker system prune

KeyError: 'ContainerConfig'
docker-compose -f docker-compose.server.yml rm

docker ps
docker exec -it XXXXXXXX bash

for mac only
chmod +x entrypoint.sh

sudo lsof -i :5432
sudo kill 604

#Error Docker on MacOS
cd .docker
nano config.json
"credStore" au lieu de "credsStore"

docker tag redis:7 pierrickmartino/redis:7
docker tag postgres:16 pierrickmartino/postgres:16
docker tag blockbuilders-celery pierrickmartino/blockbuilders-celery:latest
docker tag blockbuilders-nginx pierrickmartino/blockbuilders-nginx:latest
docker tag blockbuilders-web pierrickmartino/blockbuilders-web:latest

docker push pierrickmartino/postgres:16
docker push pierrickmartino/redis:7
docker push pierrickmartino/blockbuilders-celery:latest
docker push pierrickmartino/blockbuilders-nginx:latest
docker push pierrickmartino/blockbuilders-web:latest

thx !!!
https://dev.to/documatic/start-a-production-ready-dockerized-django-project-5eop
https://github.com/vikdiesel/admin-one-bulma-dashboard/blob/master/src/html/index.html

Icon : https://cdn.jsdelivr.net/npm/@mdi/font@4.9.95/css/materialdesignicons.min.css

GitHub - Clone private repo
https://stackoverflow.com/questions/2505096/clone-a-private-repository-github
git clone https://<pat>@github.com/<your account or organization>/<repo>.git

Traefik
# List Docker Compose instances
docker ps -a
# Stop apache after reboot
sudo /etc/init.d/apache2 stop
# Remove then recreate acme.json
rm -r acme.json
touch acme.json
chmod 600 acme.json
# Stop traefik docker instance
docker rm -f traefik
# Start docker Traefik
docker run -d   -v /var/run/docker.sock:/var/run/docker.sock   -v $PWD/traefik.toml:/traefik.toml   -v $PWD/traefik_dynamic.toml:/traefik_dynamic.toml   -v $PWD/acme.json:/acme.json   -p 80:80   -p 443:443   --network web   --name traefik   traefik:v2.2
