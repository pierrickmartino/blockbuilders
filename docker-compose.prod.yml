version: '3.9'

services:
  web:
    container_name: web
    build: .
    restart: always
    command: gunicorn blockbuilders.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    expose:
      - 8000
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
  db:
    container_name: db
    image: postgres:16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    env_file:
      - ./.env
  redis:
    image: redis:7
    container_name: redis
  celery:
    container_name: celery
    build: .
    restart: always
    command: celery -A blockbuilders worker -l info
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web
  nginx:
    container_name: nginx
    build: ./nginx
    restart: always
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    depends_on:
      - web
  flower:
    container_name: flower
    build: .
    command: celery -A blockbuilders flower
    volumes:
      - .:/code
    ports:
      - 5555:5555
    env_file:
      - ./.env
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${REDIS_BACKEND}
    depends_on:
      - web
      - redis
      - celery
volumes:
  postgres_data:
  static_volume:
  media_volume: